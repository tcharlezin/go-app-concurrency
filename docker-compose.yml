version: '3'

services:

  go-app-concurrency:
    build:
      context: .
      dockerfile: go-app-concurrency.dockerfile
    restart: always
    ports:
      - "80:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      URL: "http://localhost"
      DSN: "host=postgres port=5432 user=postgres password=password dbname=concurrency sslmode=disable timezone=UTC connect_timeout=5"
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROM_NAME: "John Smith"
      MAIL_FROM_ADDRESS: john.smith@example.com

  #  start Postgres, and ensure that data is stored to a mounted volume
  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: concurrency
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  #  start Redis, and ensure that data is stored to a mounted volume
  redis:
    image: 'redis:alpine'
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./db-data/redis/:/data

  #  start mailhog
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: always

